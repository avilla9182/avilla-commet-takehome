name: Deploy with Artifacts

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  HELM_VERSION: "3.12.0"
  REPO_URL: "https://raw.githubusercontent.com/${{ github.repository_owner }}/${{ github.event.repository.name }}/gh-pages"
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./app
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  package:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Helm setup using GITHUB_TOKEN automatically
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.HELM_VERSION }}

      # Package chart using dynamic repository info
      - name: Package Helm Chart
        run: |
          mkdir -p ./artifacts
          helm package ./charts/hello-world -d ./artifacts
          helm repo index ./artifacts --url ${{ env.REPO_URL }}

      # Upload artifacts using GitHub's built-in token
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: helm-charts
          path: ./artifacts/*

  deploy:
    needs: package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.HELM_VERSION }}

      # For DigitalOcean deployments
      - name: Deploy to DigitalOcean
        if: ${{ secrets.DO_TOKEN }}
        working-directory: infra
        run: |
          terraform init
          terraform apply -auto-approve -var="do_token=${{ secrets.DO_TOKEN }}"
        env:
          TF_VAR_do_token: ${{ secrets.DO_TOKEN }}

      # For AWS deployments
      - name: Deploy to AWS
        if: ${{ secrets.AWS_ACCESS_KEY_ID }}
        working-directory: infra
        run: |
          terraform init
          terraform apply -auto-approve \
            -var="aws_region=${{ secrets.AWS_REGION || 'us-west-2' }}" \
            -var="subnet_ids=${{ secrets.AWS_SUBNET_IDS || '[]' }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION || 'us-west-2' }}

      # For local testing
      - name: Local Kube Setup
        if: ${{ !secrets.DO_TOKEN && !secrets.AWS_ACCESS_KEY_ID }}
        run: |
          minikube start
          kubectl cluster-info

      - name: Install Chart
        run: |
          helm upgrade --install hello-world ./charts/hello-world \
            --set redis.auth.password=${{ secrets.REDIS_PASSWORD || 'defaultpass' }} \
            --kubeconfig ${{ secrets.KUBE_CONFIG || '$HOME/.kube/config' }}
  test:
    needs: package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Helm Chart Validation
        run: |
          chmod +x ./scripts/helm-lint.sh
          ./scripts/helm-lint.sh

      - name: Security Scan
        run: |
          chmod +x ./scripts/security-scan.sh
          ./scripts/security-scan.sh

      - name: Run Deployment Tests
        run: |
          chmod +x ./scripts/test-deployment.sh
          ./scripts/test-deployment.sh
